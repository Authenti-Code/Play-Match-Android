// Generated by view binder compiler. Do not edit!
package com.playMatch.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.playMatch.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RvListItemTeamsBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final LinearLayoutCompat back;

  @NonNull
  public final FrameLayout cardView;

  @NonNull
  public final ImageView edit;

  @NonNull
  public final CircleImageView logo;

  @NonNull
  public final TextView name;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextView sportLevel;

  @NonNull
  public final AppCompatTextView sportName;

  private RvListItemTeamsBinding(@NonNull FrameLayout rootView, @NonNull LinearLayoutCompat back,
      @NonNull FrameLayout cardView, @NonNull ImageView edit, @NonNull CircleImageView logo,
      @NonNull TextView name, @NonNull ProgressBar progressBar, @NonNull TextView sportLevel,
      @NonNull AppCompatTextView sportName) {
    this.rootView = rootView;
    this.back = back;
    this.cardView = cardView;
    this.edit = edit;
    this.logo = logo;
    this.name = name;
    this.progressBar = progressBar;
    this.sportLevel = sportLevel;
    this.sportName = sportName;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RvListItemTeamsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RvListItemTeamsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.rv_list_item_teams, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RvListItemTeamsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back;
      LinearLayoutCompat back = ViewBindings.findChildViewById(rootView, id);
      if (back == null) {
        break missingId;
      }

      FrameLayout cardView = (FrameLayout) rootView;

      id = R.id.edit;
      ImageView edit = ViewBindings.findChildViewById(rootView, id);
      if (edit == null) {
        break missingId;
      }

      id = R.id.logo;
      CircleImageView logo = ViewBindings.findChildViewById(rootView, id);
      if (logo == null) {
        break missingId;
      }

      id = R.id.name;
      TextView name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.sportLevel;
      TextView sportLevel = ViewBindings.findChildViewById(rootView, id);
      if (sportLevel == null) {
        break missingId;
      }

      id = R.id.sportName;
      AppCompatTextView sportName = ViewBindings.findChildViewById(rootView, id);
      if (sportName == null) {
        break missingId;
      }

      return new RvListItemTeamsBinding((FrameLayout) rootView, back, cardView, edit, logo, name,
          progressBar, sportLevel, sportName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
